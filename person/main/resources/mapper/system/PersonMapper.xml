<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PersonMapper">
    
    <resultMap type="Person" id="PersonResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="birthDate"    column="birth_date"    />
        <result property="phone"    column="phone"    />
        <result property="idCard"    column="id_card"    />
        <result property="checkCode"    column="check_code"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPersonVo">
        select id, name, gender, birth_date, phone, id_card, check_code, create_time, update_time from person
    </sql>

    <select id="selectPersonList" parameterType="Person" resultMap="PersonResult">
        <include refid="selectPersonVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="birthDate != null "> and birth_date = #{birthDate}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="idCard != null  and idCard != ''"> and id_card = #{idCard}</if>
            <if test="checkCode != null  and checkCode != ''"> and check_code = #{checkCode}</if>
        </where>
    </select>
    
    <select id="selectPersonById" parameterType="Long" resultMap="PersonResult">
        <include refid="selectPersonVo"/>
        where id = #{id}
    </select>

    <insert id="insertPerson" parameterType="Person" useGeneratedKeys="true" keyProperty="id">
        insert into person
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="birthDate != null">birth_date,</if>
            <if test="phone != null">phone,</if>
            <if test="idCard != null">id_card,</if>
            <if test="checkCode != null">check_code,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="birthDate != null">#{birthDate},</if>
            <if test="phone != null">#{phone},</if>
            <if test="idCard != null">#{idCard},</if>
            <if test="checkCode != null">#{checkCode},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePerson" parameterType="Person">
        update person
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="birthDate != null">birth_date = #{birthDate},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="idCard != null">id_card = #{idCard},</if>
            <if test="checkCode != null">check_code = #{checkCode},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePersonById" parameterType="Long">
        delete from person where id = #{id}
    </delete>

    <delete id="deletePersonByIds" parameterType="String">
        delete from person where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>